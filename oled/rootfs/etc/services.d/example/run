#!/usr/bin/with-contenv bashio
# ==============================================================================
# Start the example service
# s6-overlay docs: https://github.com/just-containers/s6-overlay
# ==============================================================================


## Get the mqqt options from the services API.
if ! bashio::services.available "mqtt"; then
    bashio::log.error "No internal MQTT service found"
else
    mqtt_host=$(bashio::services mqtt "host")
    mqtt_user=$(bashio::services mqtt "username")
    mqtt_password=$(bashio::services mqtt "password")
    mqtt_message_lisener=$(bashio::config 'mqtt_message_lisener')
fi
## Get the user config options.
message=$(bashio::config 'message')
message_coordinate_x=$(bashio::config 'message_coordinate_x')
message_coordinate_y=$(bashio::config 'message_coordinate_y')
message_unit=$(bashio::config 'message_unit')
message_unit_coordinate_x=$(bashio::config 'message_unit_coordinate_x')
message_unit_coordinate_y=$(bashio::config 'message_unit_coordinate_y')
message_font_size=$(bashio::config 'message_font_size')
message_unit_font_size=$(bashio::config 'message_unit_font_size')
display_type=$(bashio::config 'display_type')
display_rotate=$(bashio::config 'display_rotate')
display_interface_serial=$(bashio::config 'display_interface_serial')
display_interface_port=$(bashio::config 'display_interface_port')
display_interface_address=$(bashio::config 'display_interface_address')

## Print the message the user supplied, defaults to "Hello World..."
bashio::log.info "Displaying: ${message}"

## Run your program
#exec /usr/bin/my_program
#python3 /usr/bin/oled.py --mqtt_host="${mqtt_host}" --mqtt_user="${mqtt_user}" --mqtt_password="${mqtt_password}" --mqtt_message_lisener="${mqtt_message_lisener}" --message="${message}" --message_coordinate_x="${message_coordinate_x}" --message_coordinate_y="${message_coordinate_y}" --message_unit="${message_unit}" --message_unit_coordinate_x="${message_unit_coordinate_x}" --message_unit_coordinate_y="${message_unit_coordinate_y}" --message_font_size="${message_font_size}" --message_unit_font_size="${message_unit_font_size}" --display_type="${display_type}" --display_rotate="${display_rotate}" --display_interface_serial="${display_interface_serial}" --display_interface_port="${display_interface_port}" --display_interface_address="${display_interface_address}"
python3 /usr/bin/oled.py -q="${mqtt_host}" -u="${mqtt_user}" -p="${mqtt_password}" -l="${mqtt_message_lisener}" -m="${message}" -x="${message_coordinate_x}" -y="${message_coordinate_y}" -n="${message_unit}" -v="${message_unit_coordinate_x}" -w="${message_unit_coordinate_y}" -f="${message_font_size}" -s="${message_unit_font_size}" -d="${display_type}" -r="${display_rotate}" -i="${display_interface_serial}" -t="${display_interface_port}" -a="${display_interface_address}"
